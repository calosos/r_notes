orangeec <- read.csv("E:/R/orangeec.csv")
View(orangeec)
4+8
3+5
688-55
688-55
source("~/.active-rstudio-document")
688-55
5^2
5^2
View(orangeec)
View(orange)
View(Orange)
#Uso de variables
x <- 55
x
#suma con variables
var_uno <- 45
var_dos <- 3
sum_varuno_vardos <-var_uno+var_dos
#Uso de R Como Caluladora
#Suma
3+5
#Resta
688-55
#Potencia
5^2
#Uso de variables
x <- 55
x   #para ver lo que guarda
#suma con variables
var_uno <- 45
var_dos <- 3
sum_varuno_vardos<-var_uno+var_dos
sum_varuno_vardos
cal_mes_uno
cal_mes_uno<- calf_uno*mes_uno
mes_uno<-0.3
mes_dos<-0.3
mes_tres<-0.4
calf_uno<- 8
calf_dos<-10
calf_tres<-9
calf_cuatro<-9.58
cal_mes_uno<- calf_uno*mes_uno
cal_mes_uno
cal_mes_uno
cal_mes_dos <- calf_dos*mes_dos
cal_mes_dos
cal_mes_tres <- calf_tres*mes_tres
cal_mes_tres <- calf_tres*mes_tres
cal_mes_tres
calificacion_final <- cal_mes_uno+cal_mes_dos+cal_mes_tres
calificacion_final
install.packages("mtcars")
mtcars <- read.csv("E:/R/mtcars.csv")
View(mtcars)
str("mtcars")
structure("mtcars")
structure("mtcars")
str("mtcars")
str(mtcars)
mtcars
?mtcars
str(mtcars)
View(orangeec)
View(mtcars)
class(mtcars)
class(mtcars$wt)
mtcars$vs =  as.logical(mtcars$vs)
mtcars$am =  as.logical(mtcars$am)
str(mtcars)
#EDA Scatter plot mtcars
plot(mtcars$mpg ~ mtcars$cyl, xlab="cilindros", ylab= "millas  por galon ",
main="relacion cilindros y millas por galon")
qplot(mtcars$hp, geom="histogram",
xlab="caballos de fuerza",
main="Carros segun caballos de fuerza")
install.packages(“ggplot2”)
install.packages("ggplot2")
library("ggplot2")
qplot(mtcars$hp, geom="histogram",
xlab="caballos de fuerza",
main="Carros segun caballos de fuerza")
+geom_histogram()+
labs(x= "Caballos de fuerza",y="cantidad de carros",
title = "Caballos de fuerza en carros seleccionados")
qplot(mtcars$hp, geom="histogram",
xlab="caballos de fuerza",
main="Carros segun caballos de fuerza")
+geom_histogram()+
labs(x= "Caballos de fuerza",y="cantidad de carros",
title = "Caballos de fuerza en carros seleccionados")
ggplot(mtcars, aes(x=hp))
+geom_histogram()+
labs(x= "Caballos de fuerza",y="cantidad de carros",
title = "Caballos de fuerza en carros seleccionados")
+ geom_histogram()+
labs(x= "Caballos de fuerza",y="cantidad de carros",
title = "Caballos de fuerza en carros seleccionados")
ggplot(mtcars, aes(x=hp))+ geom_histogram()+ labs(x= "Caballos de fuerza",y="cantidad de carros",
title = "Caballos de fuerza en carros seleccionados")
qplot(mtcars$hp, geom="histogram",
xlab="caballos de fuerza",
main="Carros segun caballos de fuerza")
ggplot(mtcars, aes(x=hp))+ geom_histogram()+ labs(x= "Caballos de fuerza",y="cantidad de carros",
title = "Caballos de fuerza en carros seleccionados")
qplot(mtcars$hp, geom="histogram",
xlab="caballos de fuerza",
main="Carros segun caballos de fuerza")
ggplot(mtcars, aes(x=hp))+ geom_histogram()+ labs(x= "Caballos de fuerza",y="cantidad de carros",
title = "Caballos de fuerza en carros seleccionados")+ theme(legend.position = "none", panel.background = element_blank(),
panel.grid.major = element_blank(), panel.grid = element_blank())
ggplot(mtcars, aes(x=hp))+ geom_histogram()+ labs(x=
"Caballos de fuerza",y="cantidad de carros",
title = "Caballos de fuerza en carros seleccionados"
)+ theme(legend.position = "none", panel.background = element_blank(),
panel.grid.major = element_blank(), panel.grid = element_blank())
ggplot(mtcars, aes(x=hp))+ geom_histogram(binwidth = 30)+ labs(x=
"Caballos de fuerza",y="cantidad de carros",
title = "Caballos de fuerza en carros seleccionados"
)+ theme(legend.position = "none", panel.background = element_blank(),
panel.grid.major = element_blank(), panel.grid = element_blank())
ggplot()+geom_histogram(data=mtcars, aes(x=hp),fill="blue",
color= "red", binwidth= "20") + labs(x=
"Caballos de fuerza", y ="Cantidad de carros",
title="Caballs de ferza en carros selecicionados")+xlim(c(80,28))+
+ theme(legend.position = "none", panel.background = element_blank(),
panel.grid.major = element_blank(), panel.grid = element_blank())
ggplot()+geom_histogram(data=mtcars, aes(x=hp),fill="blue",
color= "red", binwidth= "20") + labs(x=
"Caballos de fuerza", y ="Cantidad de carros",
title="Caballs de ferza en carros selecicionados")+xlim(c(80,28))+
theme(legend.position = "none", panel.background = element_blank(),
panel.grid.major = element_blank(), panel.grid = element_blank())
ggplot()+geom_histogram(data=mtcars, aes(x=hp),fill="blue",
color= "red", binwidth= 20) + labs(x=
"Caballos de fuerza", y ="Cantidad de carros",
title="Caballs de ferza en carros selecicionados")+xlim(c(80,28))+
theme(legend.position = "none", panel.background = element_blank(),
panel.grid.major = element_blank(), panel.grid = element_blank())
ggplot() + geom_histogram(data= mtcars,aes(x=hp), fill="blue", color="red",
binwidth =20) +labs(x="caballos de fuerza", y="Cantidad de carros",
title="Caballos de fuerza en carros seleccionados")+xlim(c(80 ,280 ))+
theme(legend.position = "none")+theme(panel.background = element. (),
panel.grid.major = element_ (),
panel.grid.minor = element_ ())
ggplot()+ geom_histogram(data= mtcars,aes(x=hp), fill="blue", color="red",
binwidth =20) +labs(x="caballos de fuerza", y="Cantidad de carros",
title="Caballos de fuerza en carros seleccionados")+xlim(c(80 ,280 ))+
theme(legend.position = "none")+theme(panel.background = element_blank(),
panel.grid.major = element_blank (),
panel.grid.minor = element_blank ())
library("ggplot2")
ggplot()+geom_histogram(data = orangeec, aes(x=GDP.PC), fill = "Green",
color= "black", binwidth = 2000)+
labs(x="pib per caíta", y="cantidad de paises",
title="PIB per capita  pasises en latam")+
theme(legend.position = "none")+theme(panel.background = element_blank(),
panel.grid.major = element_blank (),
panel.grid.minor = element_blank ())
ggplot()+geom_histogram(data = orangeec, aes(x=Creat.Ind...GDP), fill = "Green",
color= "black", binwidth = 1)+
labs(x="Aporte economía naranja al pib% ", y="cantidad de paises",
title="Contribución economía naranja al pin en paises latam")+
theme(legend.position = "none")+theme(panel.background = element_blank(),
panel.grid.major = element_blank (),
panel.grid.minor = element_blank ())
ggplot()+geom_histogram(data = orangeec, aes(x=Internet.penetration...population), fill = "Orange",
color= "yellow", binwidth = 5)+
labs(x="Penetración Intenet como % población", y="cantidad de paises",
title="penetracion de intenet en paises latam")+
theme(legend.position = "none")+theme(panel.background = element_blank(),
panel.grid.major = element_blank (),
panel.grid.minor = element_blank ())
ggplot()+geom_histogram(data = orangeec, aes(x=Internet.penetration...population), fill = "Orange",
color= "yellow", binwidth = 5)+ scale_x_continuous(breaks = seq(40, max(100), 5))+
labs(x="Penetración Intenet como % población", y="cantidad de paises",
title="penetracion de intenet en paises latam")+
theme(legend.position = "none")+theme(panel.background = element_blank(),
panel.grid.major = element_blank (),
panel.grid.minor = element_blank ())
ggplot()+geom_histogram(data = orangeec, aes(x=Internet.penetration...population), fill = "Orange",
color= "yellow", binwidth = 5)+
scale_x_continuous(breaks = seq(40, max(100), 5))+
labs(x="Penetración Intenet como % población", y="cantidad de paises",
title="penetracion de intenet en paises latam")+
theme(legend.position = "none")+theme(panel.background = element_blank(),
panel.grid.major = element_blank (),
panel.grid.minor = element_blank ())
boxplot(mtcars$hp, ylab="caballos de fuerza", main="Caballos de fuerza  en carros mtcars" )
source("E:/R/Scripts/ejemplo_ploteo_dispercion.R", echo=TRUE)
install.packages("ggplot2")
install.packages("ggplot2")
install.packages("ggplot2")
install.packages("ggplot2")
install.packages("ggplot2")
library("ggplot2")
ggplot(mtcars, aes(x= cyl, y=hp, fill=cyl))+
geom_boxplot()+
labs = (x="cilindros", y= "caballos de fuerza", title="Caballos de fuerza según
cilindros de mtcars")+
theme(panel.background = element_blank(),
panel.grid.major = element_blank (),
panel.grid.minor = element_blank ())
ggplot(mtcars, aes(x= cyl, y=hp, fill=cyl))+
geom_boxplot()+
labs = (x="cilindros", y= "caballos de fuerza", title="Caballos de fuerza según
cilindros de mtcars")+ theme(panel.background = element_blank(),
panel.grid.major = element_blank (),
panel.grid.minor = element_blank ())
ggplot(mtcars, aes(x= cyl, y=hp, fill=cyl))+
geom_boxplot()+ labs = (x="cilindros", y= "caballos de fuerza", title="Caballos de fuerza según
cilindros de mtcars")+ theme(panel.background = element_blank(),
panel.grid.major = element_blank (),
panel.grid.minor = element_blank ())
ggplot(mtcars, aes(x= cyl, y=hp, fill=cyl))+
geom_boxplot()+ labs = (x="cilindros", y= "caballos de fuerza", title="Caballos de fuerza según
cilindros de mtcars")+theme(panel.background = element_blank(),
panel.grid.major = element_blank (),
panel.grid.minor = element_blank ())
ggplot(mtcars, aes(x= cyl, y=hp, fill=cyl))+geom_boxplot()+ labs = (x="cilindros", y= "caballos de fuerza", title="Caballos de fuerza según
cilindros de mtcars")+theme(panel.background = element_blank(),
panel.grid.major = element_blank (),
panel.grid.minor = element_blank ())
ggplot(mtcars, aes(x= cyl, y=hp, fill=cyl))+geom_boxplot()+ labs(x="cilindros", y= "caballos de fuerza", title="Caballos de fuerza según
cilindros de mtcars")+theme(panel.background = element_blank(),
panel.grid.major = element_blank (),
panel.grid.minor = element_blank ())
panel.grid.major = element_blank (),
ggplot(mtcars, aes(x=as.factor(cyl), y=hp, fill=cyl))+geom_boxplot()+ labs(x="cilindros",
y= "caballos de fuerza", title="Caballos de fuerza según
cilindros de mtcars")+theme(panel.background = element_blank(),
panel.grid.major = element_blank (),
panel.grid.minor = element_blank ())
ggplot(mtcars, aes(x=as.factor(cyl), y=hp, fill=cyl))+
geom_boxplot(alpha=0.6)+
labs(x="cilindros",
y= "caballos de fuerza", title="Caballos de fuerza según
cilindros de mtcars")+theme(panel.background = element_blank(),
panel.grid.major = element_blank (),
panel.grid.minor = element_blank ())
#otro ejemlp
#fill simempre se llena con lo que este en x
ggplot(mtcars, aes(x=am, y=mpg, fill= am))+
geom_boxplot()+
labs(x="tipo de cajas",y="millas por galon",
title="Millas por galón según tipo de caja-mtcars")+
theme(panel.background = element_blank(),
panel.grid.major = element_blank (),
panel.grid.minor = element_blank ())
mtcars$am <- factor(mtcars$am, levels = c(T,F),
labels = c("Manual", "Auntomático"))
#otro ejemlp
#fill simempre se llena con lo que este en x
ggplot(mtcars, aes(x=am, y=mpg, fill= am))+
geom_boxplot()+
labs(x="tipo de cajas",y="millas por galon",
title="Millas por galón según tipo de caja-mtcars")+
theme(panel.background = element_blank(),
panel.grid.major = element_blank (),
panel.grid.minor = element_blank ())
#
(economy <- mean(orangeec$GDP.PC))
installed.packages("dplyr")
library("dplyr")
#
(economy <- mean(orangeec$GDP.PC))
#
orangeec <- orangeec %>%
mutate(Stron_economy = ifelse(GDP.PC<economy,
"Po debajo promedio pib per cápita"
"Sobre-Arriba promeio pib per cápita"))
#
orangeec <- orangeec %>%
mutate(Stron_economy = ifelse(GDP.PC<economy,
"Por debajo promedio pib per cápita",
"Sobre-Arriba promeio pib per cápita"))
vier(orangeec)
View(orangeec)
ggplot(orangeec, aes(x=Stron_economy, y= Creat.Ind...GDP, fill=Stron_economy ))+
geom_boxplot(alpha=0.4)+
labs(x="tipo de pais", y="Aporte economía naranja alpib",
title="Aporte economía naranja en pib paises latam  con alto y bajo
pib per cápita")+
theme(legend.position = "none")+theme(panel.background = element_blank(),
panel.grid.major = element_blank (),
panel.grid.minor = element_blank ())
##
ggplot(orangeec, aes(x=Stron_economy, y=Internet.penetration...population ))+
geom_boxplot(alpha=0.4)+
labs(x="tipo de pais", y="Penetreación de intenet %",
title="Penetración de Interner en  paises latam  con alto y bajo
pib per cápita")+
theme(legend.position = "none")+theme(panel.background = element_blank(),
panel.grid.major = element_blank (),
panel.grid.minor = element_blank ())
##
ggplot(orangeec, aes(x=Stron_economy, y=Internet.penetration...population ))+
geom_boxplot(alpha=0.4)+
labs(x="tipo de pais", y="Penetreación de intenet %",
title="Penetración de Interner en  paises latam  con alto y bajo
pib per cápita")+
theme(legend.position = "none")+theme(panel.background = element_blank(),
panel.grid.major = element_blank (),
panel.grid.minor = element_blank ())
ggplot(orangeec, aes(x=Stron_economy, y= Creat.Ind...GDP, fill=Stron_economy ))+
geom_boxplot(alpha=0.4)+
labs(x="tipo de pais", y="Aporte economía naranja alpib",
title="Aporte economía naranja en pib paises latam  con alto y bajo
pib per cápita")+
theme(legend.position = "none")+theme(panel.background = element_blank(),
panel.grid.major = element_blank (),
panel.grid.minor = element_blank ())
##
ggplot(orangeec, aes(x=Stron_economy, y=Internet.penetration...population ))+
geom_boxplot(alpha=0.4)+
labs(x="tipo de pais", y="Penetreación de intenet %",
title="Penetración de Interner en  paises latam  con alto y bajo
pib per cápita")+
theme(legend.position = "none")+theme(panel.background = element_blank(),
panel.grid.major = element_blank (),
panel.grid.minor = element_blank ())
##
ggplot(orangeec, aes(x=Stron_economy, y=Internet.penetration...population ))+
geom_boxplot(alpha=0.8)+
labs(x="tipo de pais", y="Penetreación de intenet %",
title="Penetración de Interner en  paises latam  con alto y bajo
pib per cápita")+
theme(legend.position = "none")+theme(panel.background = element_blank(),
panel.grid.major = element_blank (),
panel.grid.minor = element_blank ())
##
ggplot(orangeec, aes(x=Stron_economy, y=Internet.penetration...population ))+
geom_boxplot(alpha=0.8)+
labs(x="tipo de pais", y="Penetreación de intenet %",
title="Penetración de Interner en  paises latam  con alto y bajo
pib per cápita")+
theme(legend.position = "none")+theme(panel.background = element_blank(),
panel.grid.major = element_blank (),
panel.grid.minor = element_blank ())
##
ggplot(orangeec, aes(x=Stron_economy, y=Internet.penetration...population ))+
geom_boxplot(alpha=0.8)+
labs(x="tipo de pais", y="Penetreación de intenet %",
title="Penetración de Interner en  paises latam  con alto y bajo
pib per cápita")+
theme(legend.position = "none")+theme(panel.background = element_blank(),
panel.grid.major = element_blank (),
panel.grid.minor = element_blank ())
ggplot(orangeec, aes(x=Stron_economy, y= Creat.Ind...GDP, fill=Stron_economy ))+
geom_boxplot(alpha=0.4)+
labs(x="tipo de pais", y="Aporte economía naranja alpib",
title="Aporte economía naranja en pib paises latam  con alto y bajo
pib per cápita")+
theme(legend.position = "none")+theme(panel.background = element_blank(),
panel.grid.major = element_blank (),
panel.grid.minor = element_blank ())
#scaterplot
ggplot(mtcars, aes(x=hp, y=mpg))+geom_point()+
labs(x="caballos de fuerza",y="Millas por galon",
title="Relación caballos de fuerza  y millas por galón")+
theme(panel.background = element_blank(),
panel.grid.major = element_blank (),
panel.grid.minor = element_blank ())
##
ggplot(mtcars, aes(x=wt, y=hp))+geom_point()+
labs(x="peso",y="potencia",
title="Relación peso-potencia")+
theme(panel.background = element_blank(),
panel.grid.major = element_blank (),
panel.grid.minor = element_blank ())
####Ejenplo de cater con 4 variables
ggplot(mtcars, aes(x= hp, y=qsec))+ geom_point(aes(color= am, size= cyl))+
labs(x="caballos de fuerza", y="tiempo  en 1/4 de milla",
title="Caballos-velocidad segun cilindraje  y tipo de caja")
#scatterplot con ggplot
ggplot(orangeec, aes(x= Internet.penetration...population, y=Creat.Ind...GDP))+
geom_point(aes(color= factor(Stron_economy), size= GDP.Growth))+
labs(x="penetración Internet", y="Aporte economía naranja al Pib",
title="Internet y aporte economía naranja según economí y crecimiento pib")
#scatterplot con ggplot
ggplot(orangeec, aes(x= Internet.penetration...population, y=Creat.Ind...GDP))+
geom_point(aes(color= factor(Stron_economy), size= GDP.Growth..))+
labs(x="penetración Internet", y="Aporte economía naranja al Pib",
title="Internet y aporte economía naranja según economí y crecimiento pib")
install.packages("ploty")
library("dplyr")
library("DescTools")
View(merge_smu_sconf)
conf<-read.csv("st19ncov-confirmados.csv")
mu<-read.csv("st19ncov-muertes.csv")
getwd()
setwd("e:/R/Datasets")
conf<-read.csv("st19ncov-confirmados.csv")
mu<-read.csv("st19ncov-muertes.csv")
sconf <- conf[-1,]#elimina la primera fila
s_mu<-mu[-1,]#elimina la primera fila
sconf <- select(sconf, Country.Region, Date, Value)#Pais, fecha  y acumulado de infectados
sconf <- rename(sconf, Pais=Country.Region, Fecha=Date, Infectados=Value)
###en el data frame aparecen como chr, para transformar
#se usa mutate
sconf<- mutate(sconf, Fecha= as.Date(Fecha,"%Y-%m-%d"),Infectados= as.numeric((Infectados)))
View(sconf)
#Ajuste de datos para mu
s_mu<-select(s_mu, Country.Region, Date, Value)#Selecciona pais, fecha
s_mu<-rename(s_mu,Pais=Country.Region, Fecha= Date, Muertos= Value)
s_mu<-mutate(s_mu,Fecha= as.Date(Fecha,"%Y-%m-%d"),Muertos= as.numeric((Muertos)))
View(s_mu)
#Fucionar columnas
merge_smu_sconf<-merge(sconf,s_mu)
View(merge_smu_sconf)
#Fucionar columnas
msc <- merge(sconf,s_mu)
msc
view(msc)
View(msc)
mex<-filter(mex, Infectados != 0)
View(mex)
View(mex)
#Filtros México
mex <- filter(msc, Pais=="Mexico") #Filtrl las filas de méxicp
mex<-filter(mex, Infectados != 0)
View(mex)
#Ajste de datps para el dataframe mex
mex <- mutate(mex, NI = c(1, diff(Infectados))) # Nuevos infectados por día
mex <- mutate(mex, NM = c(0, diff(Muertos))) # Nuevos muertos por día
mex <- mutate(mex, Letalidad = round(Muertos/Infectados*100, 1)) # Tasa de letalidad
mex <- mutate(mex, IDA = lag(Infectados), MDA = lag(Muertos)) # Valores día anterior
mex <- mutate(mex, FCI = Infectados/IDA, FCM = Muertos/MDA) # Factores de Crecimiento
mex <- mutate(mex, Dia = 1:dim(mex)[1]) # Días de contingencia
getwd()
write.csv(mex, "C19Mexico.csv", row.names = FALSE)
source("~/.active-rstudio-document", encoding = 'UTF-8', echo=TRUE)
install.packages("DescTools")
cbind(1:10,11:20,21:30)
cbind(1:10,matrix(11:30,ncol=2))
cbind(data.frame(x=1:10, y= 11:20), z=21:30)
#Funcion agrefar fila
df1 <- data.frame(x = 1:5, y = 6:10, z = 16:20)
df1; df2
df2 <- data.frame(x = 51:55, y = 101:105, z = 151:155)
df1; df2
rbind(df1, df2)
matriz_appli
#####Ejemplo5#########
##funcion : appli
matriz_appli <- matrix(1:49, ncol = 7)
matriz_appli
apply(matriz_appli, 1, mean) # cálculo de la media para las filas
apply(matriz_appli, 2, median) # cálculo de la mediana para las columnas
u1011 <- "https://www.football-data.co.uk/mmz4281/1011/SP1.csv"
u1112 <- "https://www.football-data.co.uk/mmz4281/1112/SP1.csv"
u1213 <- "https://www.football-data.co.uk/mmz4281/1213/SP1.csv"
u1314 <- "https://www.football-data.co.uk/mmz4281/1314/SP1.csv"
download.file(url = u1011, destfile = "SP1-1011.csv", mode = "wb")
download.file(url = u1112, destfile = "SP1-1112.csv", mode = "wb")
download.file(url = u1213, destfile = "SP1-1213.csv", mode = "wb")
download.file(url = u1314, destfile = "SP1-1314.csv", mode = "wb")
dir()
lista_archivo <-lapply(dir(), read.csv) # Guardamos los archivos en lista
lista_archivo
####head,con idice
head(lista[[1]]); head(lista[[2]]); head(lista[[3]]); head(lista[[4]])
####head,con idice
head(lista_archivo[[1]]); head(lista_archivo[[2]]); head(lista_archivo[[3]]); head(lista_archivo[[4]])
#cada uno de los data frames que tenemos en lista, los podemos combinar en un único data frame utilizando las funciones rbind y do.call de la siguiente manera
data <- do.call(rbind, lista_archivo)
numero_conjunto _datos<-length(Conunto_de_datos)
numero_conjunto_datos<-length(Conunto_de_datos)
