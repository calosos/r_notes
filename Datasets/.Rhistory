orangeec <- read.csv("E:/R/orangeec.csv")
View(orangeec)
4+8
3+5
688-55
688-55
source("~/.active-rstudio-document")
688-55
5^2
5^2
View(orangeec)
View(orange)
View(Orange)
#Uso de variables
x <- 55
x
#suma con variables
var_uno <- 45
var_dos <- 3
sum_varuno_vardos <-var_uno+var_dos
#Uso de R Como Caluladora
#Suma
3+5
#Resta
688-55
#Potencia
5^2
#Uso de variables
x <- 55
x   #para ver lo que guarda
#suma con variables
var_uno <- 45
var_dos <- 3
sum_varuno_vardos<-var_uno+var_dos
sum_varuno_vardos
cal_mes_uno
cal_mes_uno<- calf_uno*mes_uno
mes_uno<-0.3
mes_dos<-0.3
mes_tres<-0.4
calf_uno<- 8
calf_dos<-10
calf_tres<-9
calf_cuatro<-9.58
cal_mes_uno<- calf_uno*mes_uno
cal_mes_uno
cal_mes_uno
cal_mes_dos <- calf_dos*mes_dos
cal_mes_dos
cal_mes_tres <- calf_tres*mes_tres
cal_mes_tres <- calf_tres*mes_tres
cal_mes_tres
calificacion_final <- cal_mes_uno+cal_mes_dos+cal_mes_tres
calificacion_final
install.packages("mtcars")
mtcars <- read.csv("E:/R/mtcars.csv")
View(mtcars)
str("mtcars")
structure("mtcars")
structure("mtcars")
str("mtcars")
str(mtcars)
mtcars
?mtcars
str(mtcars)
View(orangeec)
View(mtcars)
class(mtcars)
class(mtcars$wt)
mtcars$vs =  as.logical(mtcars$vs)
mtcars$am =  as.logical(mtcars$am)
str(mtcars)
#EDA Scatter plot mtcars
plot(mtcars$mpg ~ mtcars$cyl, xlab="cilindros", ylab= "millas  por galon ",
main="relacion cilindros y millas por galon")
qplot(mtcars$hp, geom="histogram",
xlab="caballos de fuerza",
main="Carros segun caballos de fuerza")
install.packages(“ggplot2”)
install.packages("ggplot2")
library("ggplot2")
qplot(mtcars$hp, geom="histogram",
xlab="caballos de fuerza",
main="Carros segun caballos de fuerza")
+geom_histogram()+
labs(x= "Caballos de fuerza",y="cantidad de carros",
title = "Caballos de fuerza en carros seleccionados")
qplot(mtcars$hp, geom="histogram",
xlab="caballos de fuerza",
main="Carros segun caballos de fuerza")
+geom_histogram()+
labs(x= "Caballos de fuerza",y="cantidad de carros",
title = "Caballos de fuerza en carros seleccionados")
ggplot(mtcars, aes(x=hp))
+geom_histogram()+
labs(x= "Caballos de fuerza",y="cantidad de carros",
title = "Caballos de fuerza en carros seleccionados")
+ geom_histogram()+
labs(x= "Caballos de fuerza",y="cantidad de carros",
title = "Caballos de fuerza en carros seleccionados")
ggplot(mtcars, aes(x=hp))+ geom_histogram()+ labs(x= "Caballos de fuerza",y="cantidad de carros",
title = "Caballos de fuerza en carros seleccionados")
qplot(mtcars$hp, geom="histogram",
xlab="caballos de fuerza",
main="Carros segun caballos de fuerza")
ggplot(mtcars, aes(x=hp))+ geom_histogram()+ labs(x= "Caballos de fuerza",y="cantidad de carros",
title = "Caballos de fuerza en carros seleccionados")
qplot(mtcars$hp, geom="histogram",
xlab="caballos de fuerza",
main="Carros segun caballos de fuerza")
ggplot(mtcars, aes(x=hp))+ geom_histogram()+ labs(x= "Caballos de fuerza",y="cantidad de carros",
title = "Caballos de fuerza en carros seleccionados")+ theme(legend.position = "none", panel.background = element_blank(),
panel.grid.major = element_blank(), panel.grid = element_blank())
ggplot(mtcars, aes(x=hp))+ geom_histogram()+ labs(x=
"Caballos de fuerza",y="cantidad de carros",
title = "Caballos de fuerza en carros seleccionados"
)+ theme(legend.position = "none", panel.background = element_blank(),
panel.grid.major = element_blank(), panel.grid = element_blank())
ggplot(mtcars, aes(x=hp))+ geom_histogram(binwidth = 30)+ labs(x=
"Caballos de fuerza",y="cantidad de carros",
title = "Caballos de fuerza en carros seleccionados"
)+ theme(legend.position = "none", panel.background = element_blank(),
panel.grid.major = element_blank(), panel.grid = element_blank())
ggplot()+geom_histogram(data=mtcars, aes(x=hp),fill="blue",
color= "red", binwidth= "20") + labs(x=
"Caballos de fuerza", y ="Cantidad de carros",
title="Caballs de ferza en carros selecicionados")+xlim(c(80,28))+
+ theme(legend.position = "none", panel.background = element_blank(),
panel.grid.major = element_blank(), panel.grid = element_blank())
ggplot()+geom_histogram(data=mtcars, aes(x=hp),fill="blue",
color= "red", binwidth= "20") + labs(x=
"Caballos de fuerza", y ="Cantidad de carros",
title="Caballs de ferza en carros selecicionados")+xlim(c(80,28))+
theme(legend.position = "none", panel.background = element_blank(),
panel.grid.major = element_blank(), panel.grid = element_blank())
ggplot()+geom_histogram(data=mtcars, aes(x=hp),fill="blue",
color= "red", binwidth= 20) + labs(x=
"Caballos de fuerza", y ="Cantidad de carros",
title="Caballs de ferza en carros selecicionados")+xlim(c(80,28))+
theme(legend.position = "none", panel.background = element_blank(),
panel.grid.major = element_blank(), panel.grid = element_blank())
ggplot() + geom_histogram(data= mtcars,aes(x=hp), fill="blue", color="red",
binwidth =20) +labs(x="caballos de fuerza", y="Cantidad de carros",
title="Caballos de fuerza en carros seleccionados")+xlim(c(80 ,280 ))+
theme(legend.position = "none")+theme(panel.background = element. (),
panel.grid.major = element_ (),
panel.grid.minor = element_ ())
ggplot()+ geom_histogram(data= mtcars,aes(x=hp), fill="blue", color="red",
binwidth =20) +labs(x="caballos de fuerza", y="Cantidad de carros",
title="Caballos de fuerza en carros seleccionados")+xlim(c(80 ,280 ))+
theme(legend.position = "none")+theme(panel.background = element_blank(),
panel.grid.major = element_blank (),
panel.grid.minor = element_blank ())
library("ggplot2")
ggplot()+geom_histogram(data = orangeec, aes(x=GDP.PC), fill = "Green",
color= "black", binwidth = 2000)+
labs(x="pib per caíta", y="cantidad de paises",
title="PIB per capita  pasises en latam")+
theme(legend.position = "none")+theme(panel.background = element_blank(),
panel.grid.major = element_blank (),
panel.grid.minor = element_blank ())
ggplot()+geom_histogram(data = orangeec, aes(x=Creat.Ind...GDP), fill = "Green",
color= "black", binwidth = 1)+
labs(x="Aporte economía naranja al pib% ", y="cantidad de paises",
title="Contribución economía naranja al pin en paises latam")+
theme(legend.position = "none")+theme(panel.background = element_blank(),
panel.grid.major = element_blank (),
panel.grid.minor = element_blank ())
ggplot()+geom_histogram(data = orangeec, aes(x=Internet.penetration...population), fill = "Orange",
color= "yellow", binwidth = 5)+
labs(x="Penetración Intenet como % población", y="cantidad de paises",
title="penetracion de intenet en paises latam")+
theme(legend.position = "none")+theme(panel.background = element_blank(),
panel.grid.major = element_blank (),
panel.grid.minor = element_blank ())
ggplot()+geom_histogram(data = orangeec, aes(x=Internet.penetration...population), fill = "Orange",
color= "yellow", binwidth = 5)+ scale_x_continuous(breaks = seq(40, max(100), 5))+
labs(x="Penetración Intenet como % población", y="cantidad de paises",
title="penetracion de intenet en paises latam")+
theme(legend.position = "none")+theme(panel.background = element_blank(),
panel.grid.major = element_blank (),
panel.grid.minor = element_blank ())
ggplot()+geom_histogram(data = orangeec, aes(x=Internet.penetration...population), fill = "Orange",
color= "yellow", binwidth = 5)+
scale_x_continuous(breaks = seq(40, max(100), 5))+
labs(x="Penetración Intenet como % población", y="cantidad de paises",
title="penetracion de intenet en paises latam")+
theme(legend.position = "none")+theme(panel.background = element_blank(),
panel.grid.major = element_blank (),
panel.grid.minor = element_blank ())
boxplot(mtcars$hp, ylab="caballos de fuerza", main="Caballos de fuerza  en carros mtcars" )
source("E:/R/Scripts/ejemplo_ploteo_dispercion.R", echo=TRUE)
install.packages("ggplot2")
install.packages("ggplot2")
install.packages("ggplot2")
install.packages("ggplot2")
install.packages("ggplot2")
library("ggplot2")
ggplot(mtcars, aes(x= cyl, y=hp, fill=cyl))+
geom_boxplot()+
labs = (x="cilindros", y= "caballos de fuerza", title="Caballos de fuerza según
cilindros de mtcars")+
theme(panel.background = element_blank(),
panel.grid.major = element_blank (),
panel.grid.minor = element_blank ())
ggplot(mtcars, aes(x= cyl, y=hp, fill=cyl))+
geom_boxplot()+
labs = (x="cilindros", y= "caballos de fuerza", title="Caballos de fuerza según
cilindros de mtcars")+ theme(panel.background = element_blank(),
panel.grid.major = element_blank (),
panel.grid.minor = element_blank ())
ggplot(mtcars, aes(x= cyl, y=hp, fill=cyl))+
geom_boxplot()+ labs = (x="cilindros", y= "caballos de fuerza", title="Caballos de fuerza según
cilindros de mtcars")+ theme(panel.background = element_blank(),
panel.grid.major = element_blank (),
panel.grid.minor = element_blank ())
ggplot(mtcars, aes(x= cyl, y=hp, fill=cyl))+
geom_boxplot()+ labs = (x="cilindros", y= "caballos de fuerza", title="Caballos de fuerza según
cilindros de mtcars")+theme(panel.background = element_blank(),
panel.grid.major = element_blank (),
panel.grid.minor = element_blank ())
ggplot(mtcars, aes(x= cyl, y=hp, fill=cyl))+geom_boxplot()+ labs = (x="cilindros", y= "caballos de fuerza", title="Caballos de fuerza según
cilindros de mtcars")+theme(panel.background = element_blank(),
panel.grid.major = element_blank (),
panel.grid.minor = element_blank ())
ggplot(mtcars, aes(x= cyl, y=hp, fill=cyl))+geom_boxplot()+ labs(x="cilindros", y= "caballos de fuerza", title="Caballos de fuerza según
cilindros de mtcars")+theme(panel.background = element_blank(),
panel.grid.major = element_blank (),
panel.grid.minor = element_blank ())
panel.grid.major = element_blank (),
ggplot(mtcars, aes(x=as.factor(cyl), y=hp, fill=cyl))+geom_boxplot()+ labs(x="cilindros",
y= "caballos de fuerza", title="Caballos de fuerza según
cilindros de mtcars")+theme(panel.background = element_blank(),
panel.grid.major = element_blank (),
panel.grid.minor = element_blank ())
ggplot(mtcars, aes(x=as.factor(cyl), y=hp, fill=cyl))+
geom_boxplot(alpha=0.6)+
labs(x="cilindros",
y= "caballos de fuerza", title="Caballos de fuerza según
cilindros de mtcars")+theme(panel.background = element_blank(),
panel.grid.major = element_blank (),
panel.grid.minor = element_blank ())
#otro ejemlp
#fill simempre se llena con lo que este en x
ggplot(mtcars, aes(x=am, y=mpg, fill= am))+
geom_boxplot()+
labs(x="tipo de cajas",y="millas por galon",
title="Millas por galón según tipo de caja-mtcars")+
theme(panel.background = element_blank(),
panel.grid.major = element_blank (),
panel.grid.minor = element_blank ())
mtcars$am <- factor(mtcars$am, levels = c(T,F),
labels = c("Manual", "Auntomático"))
#otro ejemlp
#fill simempre se llena con lo que este en x
ggplot(mtcars, aes(x=am, y=mpg, fill= am))+
geom_boxplot()+
labs(x="tipo de cajas",y="millas por galon",
title="Millas por galón según tipo de caja-mtcars")+
theme(panel.background = element_blank(),
panel.grid.major = element_blank (),
panel.grid.minor = element_blank ())
#
(economy <- mean(orangeec$GDP.PC))
installed.packages("dplyr")
library("dplyr")
#
(economy <- mean(orangeec$GDP.PC))
#
orangeec <- orangeec %>%
mutate(Stron_economy = ifelse(GDP.PC<economy,
"Po debajo promedio pib per cápita"
"Sobre-Arriba promeio pib per cápita"))
#
orangeec <- orangeec %>%
mutate(Stron_economy = ifelse(GDP.PC<economy,
"Por debajo promedio pib per cápita",
"Sobre-Arriba promeio pib per cápita"))
vier(orangeec)
View(orangeec)
ggplot(orangeec, aes(x=Stron_economy, y= Creat.Ind...GDP, fill=Stron_economy ))+
geom_boxplot(alpha=0.4)+
labs(x="tipo de pais", y="Aporte economía naranja alpib",
title="Aporte economía naranja en pib paises latam  con alto y bajo
pib per cápita")+
theme(legend.position = "none")+theme(panel.background = element_blank(),
panel.grid.major = element_blank (),
panel.grid.minor = element_blank ())
##
ggplot(orangeec, aes(x=Stron_economy, y=Internet.penetration...population ))+
geom_boxplot(alpha=0.4)+
labs(x="tipo de pais", y="Penetreación de intenet %",
title="Penetración de Interner en  paises latam  con alto y bajo
pib per cápita")+
theme(legend.position = "none")+theme(panel.background = element_blank(),
panel.grid.major = element_blank (),
panel.grid.minor = element_blank ())
##
ggplot(orangeec, aes(x=Stron_economy, y=Internet.penetration...population ))+
geom_boxplot(alpha=0.4)+
labs(x="tipo de pais", y="Penetreación de intenet %",
title="Penetración de Interner en  paises latam  con alto y bajo
pib per cápita")+
theme(legend.position = "none")+theme(panel.background = element_blank(),
panel.grid.major = element_blank (),
panel.grid.minor = element_blank ())
ggplot(orangeec, aes(x=Stron_economy, y= Creat.Ind...GDP, fill=Stron_economy ))+
geom_boxplot(alpha=0.4)+
labs(x="tipo de pais", y="Aporte economía naranja alpib",
title="Aporte economía naranja en pib paises latam  con alto y bajo
pib per cápita")+
theme(legend.position = "none")+theme(panel.background = element_blank(),
panel.grid.major = element_blank (),
panel.grid.minor = element_blank ())
##
ggplot(orangeec, aes(x=Stron_economy, y=Internet.penetration...population ))+
geom_boxplot(alpha=0.4)+
labs(x="tipo de pais", y="Penetreación de intenet %",
title="Penetración de Interner en  paises latam  con alto y bajo
pib per cápita")+
theme(legend.position = "none")+theme(panel.background = element_blank(),
panel.grid.major = element_blank (),
panel.grid.minor = element_blank ())
##
ggplot(orangeec, aes(x=Stron_economy, y=Internet.penetration...population ))+
geom_boxplot(alpha=0.8)+
labs(x="tipo de pais", y="Penetreación de intenet %",
title="Penetración de Interner en  paises latam  con alto y bajo
pib per cápita")+
theme(legend.position = "none")+theme(panel.background = element_blank(),
panel.grid.major = element_blank (),
panel.grid.minor = element_blank ())
##
ggplot(orangeec, aes(x=Stron_economy, y=Internet.penetration...population ))+
geom_boxplot(alpha=0.8)+
labs(x="tipo de pais", y="Penetreación de intenet %",
title="Penetración de Interner en  paises latam  con alto y bajo
pib per cápita")+
theme(legend.position = "none")+theme(panel.background = element_blank(),
panel.grid.major = element_blank (),
panel.grid.minor = element_blank ())
##
ggplot(orangeec, aes(x=Stron_economy, y=Internet.penetration...population ))+
geom_boxplot(alpha=0.8)+
labs(x="tipo de pais", y="Penetreación de intenet %",
title="Penetración de Interner en  paises latam  con alto y bajo
pib per cápita")+
theme(legend.position = "none")+theme(panel.background = element_blank(),
panel.grid.major = element_blank (),
panel.grid.minor = element_blank ())
ggplot(orangeec, aes(x=Stron_economy, y= Creat.Ind...GDP, fill=Stron_economy ))+
geom_boxplot(alpha=0.4)+
labs(x="tipo de pais", y="Aporte economía naranja alpib",
title="Aporte economía naranja en pib paises latam  con alto y bajo
pib per cápita")+
theme(legend.position = "none")+theme(panel.background = element_blank(),
panel.grid.major = element_blank (),
panel.grid.minor = element_blank ())
#scaterplot
ggplot(mtcars, aes(x=hp, y=mpg))+geom_point()+
labs(x="caballos de fuerza",y="Millas por galon",
title="Relación caballos de fuerza  y millas por galón")+
theme(panel.background = element_blank(),
panel.grid.major = element_blank (),
panel.grid.minor = element_blank ())
##
ggplot(mtcars, aes(x=wt, y=hp))+geom_point()+
labs(x="peso",y="potencia",
title="Relación peso-potencia")+
theme(panel.background = element_blank(),
panel.grid.major = element_blank (),
panel.grid.minor = element_blank ())
####Ejenplo de cater con 4 variables
ggplot(mtcars, aes(x= hp, y=qsec))+ geom_point(aes(color= am, size= cyl))+
labs(x="caballos de fuerza", y="tiempo  en 1/4 de milla",
title="Caballos-velocidad segun cilindraje  y tipo de caja")
#scatterplot con ggplot
ggplot(orangeec, aes(x= Internet.penetration...population, y=Creat.Ind...GDP))+
geom_point(aes(color= factor(Stron_economy), size= GDP.Growth))+
labs(x="penetración Internet", y="Aporte economía naranja al Pib",
title="Internet y aporte economía naranja según economí y crecimiento pib")
#scatterplot con ggplot
ggplot(orangeec, aes(x= Internet.penetration...population, y=Creat.Ind...GDP))+
geom_point(aes(color= factor(Stron_economy), size= GDP.Growth..))+
labs(x="penetración Internet", y="Aporte economía naranja al Pib",
title="Internet y aporte economía naranja según economí y crecimiento pib")
install.packages("ploty")
download.file(url = url_production, destfile = "Producion.csv", mode = "wb")
production <-read.table("Producion.csv", header=TRUE)
attach(production)
production <-read.table("Producion.csv", header=TRUE)
production <-read.table("Producion.csv", header=TRUE)
attach(production)
download.file(url = url_production, destfile = "Producion.txt", mode = "wb")
production <-read.table("Producion.csv", header=TRUE)
production <-read.table("Producion.txt", header=TRUE)
download.file(url = url_production, destfile = "Producion.txt", mode = "wb")
download.file(url = url_production, destfile = "Producion.txt", mode = "wb")
url_production <-"https://raw.githubusercontent.com/beduExpert/Programacion-con-R-2021/main/Sesion-05/Ejemplo-01/production.txt"
setwd("E:/R/Datasets")
download.file(url = url_production, destfile = "Producion.txt", mode = "wb")
production <-read.table("Producion.txt", header=TRUE)
attach(production)
str(production)
plot(RunSize, RunTime, xlab = "Tamaño de ejecución",
ylab = "Tiempo de ejecución", pch = 16)
m_uno <- (RunTime~RunSize)
summary(m_uno)
lines(c(173, 173), c(166, 194.5962), col = "red")
plot(RunSize, RunTime, xlab = "Tamaño de ejecución",
ylab = "Tiempo de ejecución", pch = 16)
abline(lsfit(RunSize, RunTime)) # Trazamos la recta de regresión estimada
mtext(expression(paste('Modelo de regresión lineal simple:',
' ',
y[i] == beta[0] + beta[1]*x[i] + e[i])),
side = 3, adj=1, font = 2)
# Recta de regresión poblacional
text(x = 200, y = 240, expression(paste('Recta de regresión:',
' ',
y[i] == beta[0] + beta[1]*x[i])),
adj = 1, font = 2)
# Recta de regresión estimada
text(x = 350, y = 180, expression(paste('Recta estimada:',
' ',
hat(y)[i] == hat(beta)[0] + hat(beta)[1]*x[i])),
adj = 1, font = 2)
# Recta de regresión estimada
text(x = 350, y = 160, expression(paste('Recta estimada:',
' ',
hat(y)[i] == 149.74770 + 0.25924*x[i])),
adj = 1, font = 2)
# Residuales
points(189, 215, pch=16, col = "red") # Punto muestral
149.74770 + 0.25924 * 189 # Valor y sobre la recta estimada
lines(c(189, 189), c(198.7441, 215), col = "red")
points(173, 166, pch=16, col = "red") # Punto muestral
149.74770 + 0.25924 * 173 # Valor y sobre la recta estimada
lines(c(173, 173), c(166, 194.5962), col = "red")
plot(RunSize, RunTime, xlab = "Tamaño de ejecución",
ylab = "Tiempo de ejecución", pch = 16)
##Dif sin atach
###plot(production$RunSize, production$RunTime, xlab = "Tamaño de ejecución",
###     ylab = "Tiempo de ejecución", pch = 16)
#Modelo de regrseion lineal duncion m1
m_uno <- (RunTime~RunSize)
summary(m_uno)
plot(RunSize, RunTime, xlab = "Tamaño de ejecución",
ylab = "Tiempo de ejecución", pch = 16)
abline(lsfit(RunSize, RunTime)) # Trazamos la recta de regresión estimada
mtext(expression(paste('Modelo de regresión lineal simple:',
' ',
y[i] == beta[0] + beta[1]*x[i] + e[i])),
side = 3, adj=1, font = 2)
# Recta de regresión poblacional
text(x = 200, y = 240, expression(paste('Recta de regresión:',
' ',
y[i] == beta[0] + beta[1]*x[i])),
adj = 1, font = 2)
# Recta de regresión estimada
text(x = 350, y = 180, expression(paste('Recta estimada:',
' ',
hat(y)[i] == hat(beta)[0] + hat(beta)[1]*x[i])),
adj = 1, font = 2)
# Recta de regresión estimada
text(x = 350, y = 160, expression(paste('Recta estimada:',
' ',
hat(y)[i] == 149.74770 + 0.25924*x[i])),
adj = 1, font = 2)
# Residuales
points(189, 215, pch=16, col = "red") # Punto muestral
149.74770 + 0.25924 * 189 # Valor y sobre la recta estimada
lines(c(189, 189), c(198.7441, 215), col = "red")
points(173, 166, pch=16, col = "red") # Punto muestral
149.74770 + 0.25924 * 173 # Valor y sobre la recta estimada
lines(c(173, 173), c(166, 194.5962), col = "red")
